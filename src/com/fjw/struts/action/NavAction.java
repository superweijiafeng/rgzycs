/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.fjw.struts.action;

import java.util.ArrayList;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.fjw.domain.Art;
import com.fjw.domain.Cat;
import com.fjw.domain.Nav;
import com.fjw.service.ArtService;
import com.fjw.service.CatService;
import com.fjw.service.NavService;

/** 
 * MyEclipse Struts
 * Creation date: 04-12-2016
 * 
 * XDoclet definition:
 * @struts.action parameter="page" validate="true"
 */
public class NavAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	public ActionForward unspecified(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return mapping.findForward("goHome");
	}
	
	public ActionForward home(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return mapping.findForward("home");
	}
	
	public ActionForward contact(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return mapping.findForward("contact");
	}
	
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		if(request.getSession().getAttribute("user")!=null){
			return mapping.findForward("goHome");
		}
		
		Cookie[] cookies=request.getCookies();
		for(Cookie cookie:cookies) {
			if(cookie.getName().equals("username")) {
				request.setAttribute("username", cookie.getValue());
			} else if(cookie.getName().equals("password")) {
				request.setAttribute("password", cookie.getValue());
			} else if(cookie.getName().equals("isKeepPass")) {
				request.setAttribute("isKeepPass", cookie.getValue());
			}
		}
		
		return mapping.findForward("login");
	}
	
	public ActionForward logout(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		request.getSession().invalidate();
		return mapping.findForward("goHome");
	}
	
	public ActionForward changePassword(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null){
			return mapping.findForward("goHome");
		}
		return mapping.findForward("changePassword");
	}
	
	public ActionForward goModify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null){
			return mapping.findForward("goHome");
		}
		
		int artPerPage=9;
		int navId=-1,catId=-1,artId=-1,p=-1;
		try{
			navId=getParameterAsInt(request,"nav");
			catId=getParameterAsInt(request,"cat");
			artId=getParameterAsInt(request,"art");
		} catch(Exception e) {
			;
		}
		try{
			p=getParameterAsInt(request, "p");
		} catch(Exception e) {
			;
		}
		
		ArrayList<Nav> navs=new ArrayList<Nav>();
		Nav nav=null;
		Cat cat=null;
		Art art=null;
		if(artId!=-1) {
			art=ArtService.getArt(navId, catId, artId);
		}
		if(navId==-1 && catId==-1) {
			for(int i=0;i<5;i++){
				navs.add(NavService.getNav(i+1));
			}
			request.setAttribute("navs", navs);
		}
		if(navId!=-1) {
			nav=NavService.getNav(navId);
		}
		if(catId!=-1) {
			if(p==-1) p=1;
			cat=CatService.getCat(navId, catId,artPerPage,p);
		}
		if(nav!=null) {
			request.setAttribute("nav", nav);
		}
		if(cat!=null) {
			request.setAttribute("cat", cat);
			request.setAttribute("nPage", (CatService.getNArts(navId, catId)-1)/artPerPage+1);
			request.setAttribute("currPage", p);
		}
		if(art!=null) {
			request.setAttribute("art", art);
		}
		
		if(art==null) {
			return mapping.findForward("goModify");
		} else {
			return mapping.findForward("modify");
		}
	}
	
	public ActionForward modify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null){
			return mapping.findForward("goHome");
		}
		
		int navId=-1,catId=-1,artId=-1;
		try{
			navId=getParameterAsInt(request,"nav");
			catId=getParameterAsInt(request,"cat");
			artId=getParameterAsInt(request,"art");
		} catch(Exception e) {
			;
		}
		if(navId==-1) {
			return mapping.findForward("goHome");
		}
		
		Nav nav=null;
		Cat cat=null;
		Art art=null;
		if(navId!=-1) {
			nav=NavService.getNav(navId);
		}
		if(catId!=-1) {
			cat=CatService.getCat(navId, catId,0,0);
		}
		if(artId!=-1) {
			art=ArtService.getArt(navId, catId, artId);
		}
		if(nav!=null) {
			request.setAttribute("nav", nav);
		}
		if(cat!=null) {
			request.setAttribute("cat", cat);
		}
		if(art!=null) {
			request.setAttribute("art", art);
		}
		return mapping.findForward("modify");
	}
		
	
	public ActionForward content(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		int artPerPage=9;
		
		int navId=-1,catId=-1,artId=-1,p=-1;
		try{
			navId=getParameterAsInt(request,"nav");
		} catch(Exception e) {
			return mapping.findForward("goHome");
		}
		try{
			catId=getParameterAsInt(request,"cat");
			artId=getParameterAsInt(request,"art");
		} catch(Exception e) {
			;
		}
		try{
			p=getParameterAsInt(request, "p");
		} catch(Exception e) {
			;
		}

		
		Nav[] navs=(Nav[]) this.getServlet().getServletContext().getAttribute("navs");
		if(navId>navs.length) {
			return mapping.findForward("goHome");
		}
		Nav nav=navs[navId-1];
		request.setAttribute("nav", nav);
		
		Cat cat=null;
		Art art=null;
		if(catId!=-1) {
			if(p==-1) p=1;
			cat=CatService.getCat(navId,catId,artPerPage,p);
			if(cat!=null) {
				request.setAttribute("cat", cat);
			}
		}
		if(artId!=-1) {
			art=ArtService.getArt(navId,catId,artId);
			if(art!=null) {
				request.setAttribute("art", art);
			}
		}
		
		if(art!=null) {
			request.setAttribute("title", art.getTitle());
			request.setAttribute("content", art.getContent());
			request.setAttribute("timestamp", art.getTimestamp());
		} else if(cat!=null) {
			request.setAttribute("title", cat.getTitle());
			request.setAttribute("content", cat.getContent());
			request.setAttribute("arts", cat.getArts());
			request.setAttribute("timestamp", cat.getTimestamp());
			int nRecord=CatService.getNArts(navId,catId);
			request.setAttribute("nPage", (nRecord-1)/artPerPage+1);
			request.setAttribute("currPage", p);
		} else {
			request.setAttribute("title", nav.getTitle());
			request.setAttribute("content", nav.getContent());
			request.setAttribute("timestamp", nav.getTimestamp());
		}
		
		return mapping.findForward("content");
	}
	
	public ActionForward goAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null) {
			return mapping.findForward("goHome");
		}
		
		int navId=-1,catId=-1;
		try{
			navId=getParameterAsInt(request,"nav");
			catId=getParameterAsInt(request,"cat");
		} catch(Exception e) {
			;
		}
		if(navId==-1) {
			return mapping.findForward("goHome");
		}
		
		Nav nav=null;
		Cat cat=null;
		if(navId!=-1) {
			nav=NavService.getNav(navId);
		}
		if(catId!=-1) {
			cat=CatService.getCat(navId, catId,0,0);
		}
		if(nav!=null) {
			request.setAttribute("nav", nav);
		}
		if(cat!=null) {
			request.setAttribute("cat", cat);
		}
		return mapping.findForward("goAdd");
	}
	
	public ActionForward goBackupAndRestore(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null) {
			return mapping.findForward("goHome");
		} else {
			return mapping.findForward("goBackupAndRestore");
		}
	}
	
	
	private int getParameterAsInt(HttpServletRequest request, String param) throws Exception {
		String str=request.getParameter(param);
		if(str==null) {
			throw new Exception();
		}
		int id=0;
		try {
			id=Integer.parseInt(str);
		} catch(NumberFormatException e) {
			throw new Exception();
		}
		if(id<=0) {
			throw new Exception();
		}
		return id;
	}
	
}