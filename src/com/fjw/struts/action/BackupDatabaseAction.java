/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.fjw.struts.action;

import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.fjw.databaseStructure.*;

import com.fjw.dao.SQLHelper;

/** 
 * MyEclipse Struts
 * Creation date: 04-16-2016
 * 
 * XDoclet definition:
 * @struts.action
 */
public class BackupDatabaseAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null) {
			return mapping.findForward("goHome");
		}
		
		ArrayList<Admin> admins=new ArrayList<Admin>();
		ArrayList<NavContent> navs=new ArrayList<NavContent>();
		ArrayList<CatContent> cats=new ArrayList<CatContent>();
		ArrayList<ArtContent> arts=new ArrayList<ArtContent>();
		ArrayList<FileContent> files=new ArrayList<FileContent>();
		
		SQLHelper sqlHelper=new SQLHelper();
		String sql="select * from admin";
		ArrayList<ArrayList<Object>> sqlResult=sqlHelper.executeQuery(sql, null);
		for(int i=0;i<sqlResult.size();i++){
			Admin admin=new Admin();
			admin.setUsername((String)sqlResult.get(i).get(0));
			admin.setPassword((String)sqlResult.get(i).get(1));
			admins.add(admin);
		}
		sql="select * from navContent";
		sqlResult=sqlHelper.executeQuery(sql, null);
		for(int i=0;i<sqlResult.size();i++){
			NavContent navContent=new NavContent();
			navContent.setNavId((Integer)sqlResult.get(i).get(0));
			navContent.setTitle((String)sqlResult.get(i).get(1));
			navContent.setImage((Integer)sqlResult.get(i).get(2));
			navContent.setContent((String)sqlResult.get(i).get(3));
			navContent.setTimestamp((Timestamp)sqlResult.get(i).get(4));
			navs.add(navContent);
		}
		sql="select * from catContent";
		sqlResult=sqlHelper.executeQuery(sql, null);
		for(int i=0;i<sqlResult.size();i++){
			CatContent catContent=new CatContent();
			catContent.setId((Integer)sqlResult.get(i).get(0));
			catContent.setNavId((Integer)sqlResult.get(i).get(1));
			catContent.setCatId((Integer)sqlResult.get(i).get(2));
			catContent.setTitle((String)sqlResult.get(i).get(3));
			catContent.setImage((Integer)sqlResult.get(i).get(4));
			catContent.setContent((String)sqlResult.get(i).get(5));
			catContent.setTimestamp((Timestamp)sqlResult.get(i).get(6));
			cats.add(catContent);
		}
		sql="select * from artContent";
		sqlResult=sqlHelper.executeQuery(sql, null);
		for(int i=0;i<sqlResult.size();i++){
			ArtContent artContent=new ArtContent();
			artContent.setId((Integer)sqlResult.get(i).get(0));
			artContent.setNavId((Integer)sqlResult.get(i).get(1));
			artContent.setCatId((Integer)sqlResult.get(i).get(2));
			artContent.setArtId((Integer)sqlResult.get(i).get(3));
			artContent.setTitle((String)sqlResult.get(i).get(4));
			artContent.setImage((Integer)sqlResult.get(i).get(5));
			artContent.setContent((String)sqlResult.get(i).get(6));
			artContent.setTimestamp((Timestamp)sqlResult.get(i).get(7));
			arts.add(artContent);
		}
		sql="select * from fileContent";
		sqlResult=sqlHelper.executeQuery(sql, null);
		for(int i=0;i<sqlResult.size();i++){
			FileContent fileContent=new FileContent();
			fileContent.setId((Integer)sqlResult.get(i).get(0));
			fileContent.setFilename((String)sqlResult.get(i).get(1));
			fileContent.setShowFilename((String)sqlResult.get(i).get(2));
			files.add(fileContent);
		}
		
		
		response.setContentType("text/html");
		try {
			response.setHeader("Content-Disposition", "attachment;filename="+
					java.net.URLEncoder.encode("网站数据库备份-"+new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())+".dump","UTF-8"));
		} catch (UnsupportedEncodingException e1) {
			request.setAttribute("info", "设置信息头失败");
			return null;
		}
		
		OutputStream os=null;
		ObjectOutputStream oos=null;
		try {
			os=response.getOutputStream();
			oos=new ObjectOutputStream(os);
			oos.writeObject(admins);
			oos.writeObject(navs);
			oos.writeObject(cats);
			oos.writeObject(arts);
			oos.writeObject(files);
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if(oos!=null) oos.close();
				if(os!=null) os.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return null;
	}
}
