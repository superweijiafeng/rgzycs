/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.fjw.struts.action;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.fjw.dao.SQLHelper;

/** 
 * MyEclipse Struts
 * Creation date: 04-17-2016
 * 
 * XDoclet definition:
 * @struts.action
 */
public class RestoreDatabaseStructureAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getSession().getAttribute("user")==null) {
			return mapping.findForward("goHome");
		}
		
		PrintWriter out=null;
		try {
			out=response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		SQLHelper sqlHelper=new SQLHelper();
		out.println("删除fileContent"+translate(sqlHelper.execute("drop table if exists fileContent", null))+"<br/>");
		out.println("删除artContent"+translate(sqlHelper.execute("drop table if exists artContent", null))+"<br/>");
		out.println("删除catContent"+translate(sqlHelper.execute("drop table if exists catContent", null))+"<br/>");
		out.println("删除navContent"+translate(sqlHelper.execute("drop table if exists navContent", null))+"<br/>");
		out.println("删除admin"+translate(sqlHelper.execute("drop table if exists admin", null))+"<br/>");
		out.println("重建admin"+translate(sqlHelper.execute("CREATE TABLE IF NOT EXISTS `admin` ("+
				  "`username` varchar(40) NOT NULL,"+
				  "`password` varchar(40) NOT NULL,"+
				  "PRIMARY KEY (`username`)"+
				  ") ENGINE=InnoDB DEFAULT CHARSET=latin1;", null))+"<br/>");
		out.println("重建artContent"+translate(sqlHelper.execute("CREATE TABLE IF NOT EXISTS `artContent` ("+
				  "`id` int(11) NOT NULL AUTO_INCREMENT,"+
				  "`navId` int(11) NOT NULL,"+
				  "`catId` int(11) NOT NULL,"+
				  "`artId` int(11) NOT NULL,"+
				  "`title` varchar(400) CHARACTER SET gbk NOT NULL,"+
				  "`image` int(11) DEFAULT NULL,"+
				  "`content` mediumtext CHARACTER SET gbk NOT NULL,"+
				  "`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,"+
				  "PRIMARY KEY (`id`)"+
				  ") ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8", null))+"<br/>");
		out.println("重建catContent"+translate(sqlHelper.execute("CREATE TABLE IF NOT EXISTS `catContent` ("+
				  "`id` int(11) NOT NULL AUTO_INCREMENT,"+
				  "`navId` int(11) NOT NULL,"+
				  "`catId` int(11) NOT NULL,"+
				  "`title` varchar(40) CHARACTER SET gbk NOT NULL,"+
				  "`image` int(11) DEFAULT NULL,"+
				  "`content` mediumtext CHARACTER SET gbk NOT NULL,"+
				  "`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,"+
				  "PRIMARY KEY (`id`)"+
				  ") ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=12", null))+"<br/>");
		out.println("重建navContent"+translate(sqlHelper.execute("CREATE TABLE IF NOT EXISTS `navContent` ("+
				  "`navId` int(11) NOT NULL,"+
				  "`title` varchar(400) CHARACTER SET gbk NOT NULL,"+
				  "`image` int(11) DEFAULT NULL,"+
				  "`content` mediumtext CHARACTER SET gbk NOT NULL,"+
				  "`timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,"+
				  "PRIMARY KEY (`navId`)"+
				  ") ENGINE=InnoDB DEFAULT CHARSET=latin1", null))+"<br/>");
		out.println("重建fileContent"+translate(sqlHelper.execute("CREATE TABLE IF NOT EXISTS `fileContent` ("+
				  "`id` int(11) NOT NULL AUTO_INCREMENT,"+
				  "`filename` varchar(4000) CHARACTER SET gbk NOT NULL,"+
				  "`showFilename` varchar(4000) CHARACTER SET gbk NOT NULL,"+
				  "PRIMARY KEY (`id`)"+
				  ") ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=10", null))+"<br/>");
		out.println("请恢复数据，否则退出后将无法登陆");
		return null;
	}

	private String translate(boolean execute) {
		if(execute==true) {
			return "失败";
		} else {
			return "成功";
		}
	}
}