/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.fjw.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.fjw.domain.Art;
import com.fjw.domain.Cat;
import com.fjw.domain.FileContent;
import com.fjw.domain.Nav;
import com.fjw.service.ArtService;
import com.fjw.service.CatService;
import com.fjw.service.FileContentService;
import com.fjw.service.NavService;
import com.fjw.struts.form.ModifyForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-14-2016
 * 
 * XDoclet definition:
 * @struts.action path="/modify" name="modifyForm" scope="request"
 */
public class ModifyAction extends Action {
	/*
	 * Generated Methods
	 */

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModifyForm modifyForm = (ModifyForm) form;
		if(request.getSession().getAttribute("user")==null) {
			return mapping.findForward("goHome");
		}
		
		int navId=-1,catId=-1,artId=-1;
		try{
			navId=getParameterAsInt(request,"nav");
			catId=getParameterAsInt(request,"cat");
			artId=getParameterAsInt(request,"art");
		} catch(Exception e) {
			;
		}

		if(artId!=-1) {
			Art art=ArtService.getArt(navId, catId, artId);
			art.setTitle(modifyForm.getTitle());
			art.setContent(modifyForm.getContent());
			if("del".equals(modifyForm.getImage())) {
				art.setImage(null);
			} else if("new".equals(modifyForm.getImage())) {
				FileContent fileContent=FileContentService.createFileContent(modifyForm.getImageFile(), this);
				if(fileContent==null) {
					request.setAttribute("info", "上传文件失败");
					return mapping.findForward("result");
				}
				art.setImage(fileContent);
			} else if("old".equals(modifyForm.getImage())) {
				;//do nothing
			}
			if(ArtService.modifyArt(art)==true) {
				request.setAttribute("info", "修改成功");
				return mapping.findForward("result");
			} else {
				request.setAttribute("info", "修改失败");
				return mapping.findForward("result");
			}
		} else if(catId!=-1) {
			Cat cat=CatService.getCat(navId, catId,0,0);
			cat.setTitle(modifyForm.getTitle());
			cat.setContent(modifyForm.getContent());
			if("del".equals(modifyForm.getImage())) {
				cat.setImage(null);
			} else if("new".equals(modifyForm.getImage())) {
				FileContent fileContent=FileContentService.createFileContent(modifyForm.getImageFile(), this);
				if(fileContent==null) {
					request.setAttribute("info", "上传文件失败");
					return mapping.findForward("result");
				}
				cat.setImage(fileContent);
			} else if("old".equals(modifyForm.getImage())) {
				;//do nothing
			}
			if(CatService.modifyCat(cat)==true) {
				request.setAttribute("info", "修改成功");
				return mapping.findForward("result");
			} else {
				request.setAttribute("info", "修改失败");
				return mapping.findForward("result");
			}
		} else if(navId!=-1) {
			Nav nav=NavService.getNav(navId);
			nav.setTitle(modifyForm.getTitle());
			nav.setContent(modifyForm.getContent());
			if("del".equals(modifyForm.getImage())) {
				nav.setImage(null);
			} else if("new".equals(modifyForm.getImage())) {
				FileContent fileContent=FileContentService.createFileContent(modifyForm.getImageFile(), this);
				if(fileContent==null) {
					request.setAttribute("info", "上传文件失败");
					return mapping.findForward("result");
				}
				nav.setImage(fileContent);
			} else if("old".equals(modifyForm.getImage())) {
				;//do nothing
			}
			if(NavService.modifyNav(nav)==true) {
				request.setAttribute("info", "修改成功");
				return mapping.findForward("result");
			} else {
				request.setAttribute("info", "修改失败");
				return mapping.findForward("result");
			}
		} else {
			return mapping.findForward("goHome");
		}
		
	}
	
	private int getParameterAsInt(HttpServletRequest request, String param) throws Exception {
		String str=request.getParameter(param);
		if(str==null) {
			throw new Exception();
		}
		int id=0;
		try {
			id=Integer.parseInt(str);
		} catch(NumberFormatException e) {
			throw new Exception();
		}
		if(id<=0) {
			throw new Exception();
		}
		return id;
	}
}

